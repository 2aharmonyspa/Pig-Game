ython 3.11.1 (v3.11.1:a7a450f84a, Dec  6 2022, 15:24:06) [Clang 13.0.0 (clang-1300.0.29.30)] on darwin
Type "help", "copyright", "credits" or "license()" for more information.
mport random

def holdAt20(limit=20):
    turnTotal = 0
    while turnTotal < limit:
        roll = random.randint(1,6)
        print("Roll:", roll)
        if roll == 1:
            turnTotal = 0
            print("Turn Total:", turnTotal)
            return turnTotal
        else:
            turnTotal += roll
    print("Turn Total:", turnTotal)
    return turnTotal

def holdAt20Outcomes(trials):
    outcomes = {0:0}
    for val in range(20,26):
        outcomes[val] = 0
    for _ in range(trials):
        score = holdAt20()
        outcomes[score] +=1
    for score in outcomes:
        print(score, outcomes[score]/trials)

def holdAtXOutcomes(trials, limit):
    outcomes = {0:0}
    for val in range(limit,limit+6):
        outcomes[val] = 0
    for _ in range(trials):
        score = holdAt20(limit)
        outcomes[score] +=1
    for score in outcomes:
        print(score, outcomes[score]/trials)


def holdAt20orGoal(limit ,score):
    
    turnTotal = 0
    while turnTotal < limit and turnTotal + score < 100 :
        roll =  random.randint(1,6)
        #print("Roll:", roll)
        if roll  == 1:
            turnTotal = 0
            # print("Turn Total:", turnTotal)
            # print("New Score: ", 0)
            return 0, score
        else:
            turnTotal += roll
        
    # print("Turn Total:", turnTotal)
    # print("New Score: ", score+turnTotal)
    return turnTotal, score+turnTotal

def holdAt20orGoalGame():
    score = 0
    turns = 0
    while score < 100:
        turnTotal, newScore = holdAt20orGoal(18,score)
        turns += 1
        # print("Turn Total:", turnTotal)
        # print("Score:", newScore)
        score = newScore
    return turns

def averagePigTurns():
    totalTurns = 0
    TRIALS = 100000
    for _ in range(TRIALS):
        turns = holdAt20orGoalGame()
        totalTurns += turns
    
    print(totalTurns / TRIALS)

def twoPlayerPig():
    scores = [0, 0]
    player = random.randint(1, 2)

    print("Player 1's score: ", scores[0])
    print("Player 2's score: ", scores[1])
... 
...     while True:
...         if player == 1:
...             print('It is player 1’s turn.')
...             scores[0] += holdAt20()
...             print("New score : " + str(scores[0]))
...             player += 1
...             
...         
...         else:
...             print('It is player 2’s turn.')
...             scores[1] += holdAt20()
...             print("New score : " + str(scores[1]))
...             player -=1
...         if scores[0] >= 100 or scores[1] >= 100:
...             break
...         print("Player 1's score: ", scores[0])
...         print("Player 2's score: ", scores[1])
...         
... 
... def pigGame():
...     scores = [0, 0]
...     player = random.randint(1, 2)
... 
...     print("Player 1's score: ", scores[0])
...     print("Player 2's score: ", scores[1])
... 
...     while True:
...         if player == 1:
...             print('It is player 1’s turn.')
...             scores[0] += holdAt20()
...             print("New score : " + str(scores[0]))
...             player += 1
...             
...         
...         else:
...             print('It is player 2’s turn.')
...             turnTotal = 0
...             roll = random.randint(1, 6)
...             print("Roll: ", roll)
... 
...             if roll != 1:
...                 turnTotal += roll
...                 choice = input("Turn total: " + str(turnTotal) + " Roll/Hold? ")
...                 while len(choice) == 0:
...                     roll = random.randint(1, 6)
...                     print("Roll: ", roll)
... 
...                     if roll == 1:
...                         turnTotal = 0
...                         break
...                     turnTotal += roll
...                     choice = input("Turn total: " + str(turnTotal) + " Roll/Hold? ")
... 
...                 
...             scores[1] += turnTotal
...             print("Turn Total:", turnTotal)
...             print("New score : " + str(scores[1]))
...             player -=1
... 
...         if scores[0] >= 100 or scores[1] >= 100:
...             break
...         print("Player 1's score: ", scores[0])
...         print("Player 2's score: ", scores[1])
